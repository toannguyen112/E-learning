{"ast":null,"code":"import _defineProperty from \"C:\\\\E-learning\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_COURSES, FETCH_COURSES_CATALOG, FETCH_COURSE_DETAIL, ADD_COURSE, DELETE_COURSE } from '../Action/type'; // import data from '../../Services/data.json'\n\nconst initialState = {\n  course: [],\n  courseCatalog: [],\n  courseDetail: null\n};\n\nconst Course = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COURSES:\n      {\n        state.course = action.payload;\n        return _objectSpread({}, state);\n      }\n\n    case FETCH_COURSES_CATALOG:\n      {\n        state.courseCatalog = action.payload;\n        return _objectSpread({}, state);\n      }\n\n    case FETCH_COURSE_DETAIL:\n      {\n        state.courseDetail = action.payload;\n        return _objectSpread({}, state);\n      }\n\n    case ADD_COURSE:\n      {\n        console.log(action.payload);\n        let mangCapNhat = [...state.course];\n        mangCapNhat = state.course.push(action.payload);\n        state.course = mangCapNhat;\n        return [...state.course];\n      }\n\n    case DELETE_COURSE:\n      {\n        let newArr = [...state.course];\n        newArr = state.course.filter(course => course.maKhoaHoc !== action.payload);\n        state.course = newArr;\n        return _objectSpread({}, state);\n      }\n    // case FETCH_COURSE_PAGINATION: {\n    //     state.coursePagination.items = action.payload.items\n    //     state.coursePagination.currentPage = action.payload.currentPage\n    //     state.coursePagination.count = action.payload.count\n    //     state.coursePagination.totalPages = action.payload.totalPages\n    //     return { ...state }\n    // }\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default Course;","map":{"version":3,"sources":["C:\\E-learning\\src\\Store\\Reducer\\course.jsx"],"names":["FETCH_COURSES","FETCH_COURSES_CATALOG","FETCH_COURSE_DETAIL","ADD_COURSE","DELETE_COURSE","initialState","course","courseCatalog","courseDetail","Course","state","action","type","payload","console","log","mangCapNhat","push","newArr","filter","maKhoaHoc"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,qBAAxB,EAA+CC,mBAA/C,EAAoEC,UAApE,EAAgFC,aAAhF,QAAqG,gBAArG,C,CACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,aAAa,EAAE,EAFE;AAGjBC,EAAAA,YAAY,EAAE;AAHG,CAArB;;AAUA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAG7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,aAAL;AAAoB;AAChBU,QAAAA,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACE,OAAtB;AACA,iCAAYH,KAAZ;AACH;;AAED,SAAKT,qBAAL;AAA4B;AACxBS,QAAAA,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACE,OAA7B;AACA,iCAAYH,KAAZ;AAEH;;AAED,SAAKR,mBAAL;AAA0B;AACtBQ,QAAAA,KAAK,CAACF,YAAN,GAAqBG,MAAM,CAACE,OAA5B;AACA,iCAAYH,KAAZ;AAEH;;AAED,SAAKP,UAAL;AAAiB;AACbW,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,YAAIG,WAAW,GAAG,CAAC,GAAGN,KAAK,CAACJ,MAAV,CAAlB;AACCU,QAAAA,WAAW,GAAGN,KAAK,CAACJ,MAAN,CAAaW,IAAb,CAAkBN,MAAM,CAACE,OAAzB,CAAd;AACDH,QAAAA,KAAK,CAACJ,MAAN,GAAeU,WAAf;AACA,eAAO,CAAC,GAAGN,KAAK,CAACJ,MAAV,CAAP;AAEH;;AACD,SAAKF,aAAL;AAAoB;AAChB,YAAIc,MAAM,GAAG,CAAC,GAAGR,KAAK,CAACJ,MAAV,CAAb;AACAY,QAAAA,MAAM,GAAGR,KAAK,CAACJ,MAAN,CAAaa,MAAb,CAAoBb,MAAM,IAAIA,MAAM,CAACc,SAAP,KAAqBT,MAAM,CAACE,OAA1D,CAAT;AACAH,QAAAA,KAAK,CAACJ,MAAN,GAAeY,MAAf;AACA,iCAAYR,KAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACI,+BAAYA,KAAZ;AA1CR;AA4CH,CA/CD;;AAgDA,eAAeD,MAAf","sourcesContent":["import { FETCH_COURSES, FETCH_COURSES_CATALOG, FETCH_COURSE_DETAIL, ADD_COURSE, DELETE_COURSE } from '../Action/type';\r\n// import data from '../../Services/data.json'\r\nconst initialState = {\r\n    course: [],\r\n    courseCatalog: [],\r\n    courseDetail: null,\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst Course = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FETCH_COURSES: {\r\n            state.course = action.payload\r\n            return { ...state }\r\n        }\r\n\r\n        case FETCH_COURSES_CATALOG: {\r\n            state.courseCatalog = action.payload\r\n            return { ...state }\r\n\r\n        }\r\n\r\n        case FETCH_COURSE_DETAIL: {\r\n            state.courseDetail = action.payload\r\n            return { ...state }\r\n\r\n        }\r\n\r\n        case ADD_COURSE: {\r\n            console.log(action.payload);\r\n            let mangCapNhat = [...state.course]\r\n             mangCapNhat = state.course.push(action.payload)\r\n            state.course = mangCapNhat\r\n            return [...state.course]\r\n\r\n        }\r\n        case DELETE_COURSE: {\r\n            let newArr = [...state.course]\r\n            newArr = state.course.filter(course => course.maKhoaHoc !== action.payload)\r\n            state.course = newArr\r\n            return { ...state }\r\n        }\r\n\r\n        // case FETCH_COURSE_PAGINATION: {\r\n        //     state.coursePagination.items = action.payload.items\r\n        //     state.coursePagination.currentPage = action.payload.currentPage\r\n        //     state.coursePagination.count = action.payload.count\r\n        //     state.coursePagination.totalPages = action.payload.totalPages\r\n        //     return { ...state }\r\n        // }\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\nexport default Course\r\n"]},"metadata":{},"sourceType":"module"}